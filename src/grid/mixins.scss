@mixin media-breakpoint-up($name, $grid-breakpoints: $breakpoints) {
  $min: breakpoint-min($name, $grid-breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin make-row($gutter-w: $grid-gutter-width, $gutter-h: $grid-gutter-height) {
  --#{$grid-variable-prefix}gutter-x: #{$gutter-w};
  --#{$grid-variable-prefix}gutter-y: #{$gutter-h};
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(-1 * var(--#{$grid-variable-prefix}gutter-y));
  margin-right: calc(-0.5 * var(--#{$grid-variable-prefix}gutter-x));
  margin-left: calc(-0.5 * var(--#{$grid-variable-prefix}gutter-x));
}

@mixin make-col-ready($gutter: $grid-gutter-width) {
  box-sizing: if(
    variable-exists(grid-include-column-box-sizing) and $grid-include-column-box-sizing,
    border-box,
    null
  );
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;

  padding-right: calc(var(--#{$grid-variable-prefix}gutter-x) * 0.5);
  padding-left: calc(var(--#{$grid-variable-prefix}gutter-x) * 0.5);
  margin-top: var(--#{$grid-variable-prefix}gutter-y);
}

@mixin make-col-auto() {
  flex: 0 0 auto;
  width: auto;
}

@mixin row-cols($count) {
  > * {
    flex: 0 0 auto;
    width: divide(100%, $count);
  }
}

@mixin make-col($size: false, $columns: $grid-columns) {
  @if $size {
    flex: 0 0 auto;
    width: percentage(divide($size, $columns));
  } @else {
    flex: 1 1 0;
    max-width: 100%;
  }
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: divide($size, $columns);
  margin-left: if($num == 0, 0, percentage($num));
}

@mixin make-grid-columns(
  $columns: $grid-columns,
  $gutter: $grid-gutter-width,
  $grid-breakpoints: $breakpoints
) {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      .col#{$infix} {
        flex: 1 0 0%;
      }

      .row-cols#{$infix}-auto > * {
        @include make-col-auto();
      }

      @if $grid-row-columns > 0 {
        @for $i from 1 through $grid-row-columns {
          .row-cols#{$infix}-#{$i} {
            @include row-cols($i);
          }
        }
      }

      .col#{$infix}-auto {
        @include make-col-auto();
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            @include make-col($i, $columns);
          }
        }

        @for $i from 0 through ($columns - 1) {
          @if not($infix == '' and $i == 0) {
            .offset#{$infix}-#{$i} {
              @include make-col-offset($i, $columns);
            }
          }
        }
      }

      @each $key, $value in $grid-gutters {
        .g#{$infix}-#{$key},
        .gx#{$infix}-#{$key} {
          --#{$grid-variable-prefix}gutter-x: #{$value};
        }

        .g#{$infix}-#{$key},
        .gy#{$infix}-#{$key} {
          --#{$grid-variable-prefix}gutter-y: #{$value};
        }
      }
    }
  }
}
